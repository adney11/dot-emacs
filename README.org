#+STARTUP: hidestars

* Lesson 1
  Journey to being a better emacs user
  - Made some changes to init.el
  - setup and install melpa
* Lesson 2
** Part 1
  - reviewed init.el
  - Learned how to insert a link
  - [[https://www.google.com][Click here to open Google]]
  - Learned how to fold titles in org mode
  - Made readme.org, to document this journey
  - C-x C-L to insert link
  - C-x C-o to open link on default browser
  - Tab on title line, to fold
  - Alt + <ARROW> to change order of titles
** Part 2 - Subtitle Example
   Hey this is a subtitle for Lesson 2
* Lesson 3
  - Everything in emacs is a function - elisp
  - (function-name) -> then use C-x C-e to run this line
  - eg: (setq v 100) -> will set v to value 100
  - eg: (eval-last-sexp) -> will evaluate the last expression
  - M-x view-lossage -> shows history of commands used
  - Editted init.el to remove toolbar
* Lesson 4
  Buffers
  - use buffers as much as possible
  - C-x C-f to open a new file into a new buffer
  - C-x b -> to switch between buffers
  - can infact use C-x b to open a new buffer, do whatevre, and then can save into a file
  - C-x C-b will show a list of open buffers
  - C-x b ? will show list of available buffers in short form
  - made some changes to init.el file - to add new buffer listing, and optional tab bar
* Lesson 5
  Windows
  - window is a pane in emacs
  - C-x 2/3/1 (horizontal/vertical/one window)
  - C-x o -> to switch between windows (added ace-window functionality in init.el)
* Lesson 6
  Search (Swiper)
 - Installed swiper - better search than I-search
 - changed init.el to reflect this change, installed counsel and swiper
* Lesson 7
  Avy (jumping to chars)
  - Cleaned up swiper to bind to C-s
  - Added Avy to search for chars, binded to M-s
* Lesson 8
  Autocomplete
  - added package "auto-complete" for emacs
  - maybe check out company mode
* Lesson 9
  Themes - already done, using zenburn-theme currently
* Lesson 10
  - Using org file for a well formatted init file
  - Using org-babel-laod-file to load myinit.org which has elisp code blocks
    seperated into nice orgranised blocks

